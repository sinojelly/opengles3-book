// This buildscript{} block configures the code driving the build
buildscript {
    /**
     * The nested repositories{} block declares that this build uses the
     * jcenter repository.
     */
    repositories {
        // fix aapt cannot found error
        google()
        // download old version for somme jars
        mavenCentral()
        jcenter()
    }

    /**
     * This block declares a dependency on the 3.2.1 version
     * of the Gradle plugin for the buildscript.
     */
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.1'
    }
}

allprojects {
    repositories {
        // fix aapt cannot found error
        google()
        // download old version for somme jars
        jcenter()
    }
}

/**
 * This line applies the com.android.application plugin. Note that you should
 * only apply the com.android.application plugin. Applying the Java plugin as
 * well will result in a build error.
 */
apply plugin: 'com.android.application'

/**
 * The android{} block configures all of the parameters for the Android build.
 * You must provide values for at least the build tools version and the
 * compilation target.
 */
android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28

        // 10,00,000 major-minor-dev
        versionCode 1000000
        versionName '1.0.0'
    }
    externalNativeBuild {
        cmake {
            //path "../../Common/CMakeLists.txt"
            path "CMakeLists.txt"
        }
    }
    /**
     * This nested sourceSets block points the source code directories to the
     * existing folders in the project, instead of using the default new
     * organization.
     */
    sourceSets {
        main {
            manifest.srcFile 'Android/AndroidManifest.xml'
            java.srcDirs = []
            jni.srcDirs = []
            jniLibs.srcDirs = []
            // renderscript.srcDirs = ['src/main/renderscript']
            // aidl.srcDirs = ['src/main/aidl']
            // resources.srcDirs = ['src/main/resources']
            res.srcDirs = []
            assets.srcDirs = []
        }

        // Move the tests to tests/java, tests/res, etc...
        //androidTest.setRoot('tests')

        /**
         * Move the build types to build-types/<type>
         * For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
         * This moves them out of them default location under src/<type>/... which would
         * conflict with src/ being used by the main source set.
         * Adding new build types or product flavors should be accompanied
         * by a similar customization.
         */
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

/**
 * This dependencies block includes any dependencies for the project itself. The
 * following line includes all the JAR files in the libs directory.
 */
dependencies {
}